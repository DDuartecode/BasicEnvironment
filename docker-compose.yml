services:
  authenticator-api:
    build: 
      context: .
      dockerfile: ./Authenticator/dockerfile
    image: authenticator
    container_name: authenticator
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ../Authenticator:/app
    ports:
      - 80:8080
    depends_on:
      - postgres-auth
    command: php /app/AuthenticatorApi/artisan serve --host=0.0.0.0 --port=8080 # Somente para desenvolvimento
    networks:
        - order-services-network

  order-api:
    build:
      context: .
      dockerfile: ./OrderProcessor/dockerfile
    image: order-api
    container_name: order-api
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ../OrderProcessor:/app
      - ./OrderProcessor/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    ports:
      - "3000:8080"
    depends_on:
      - postgres-order
    command: php /app/OrderProcessorApi/artisan serve --host=0.0.0.0 --port=8080 # Somente para desenvolvimento
    networks:
      - order-services-network

  order-generator-api:
    build:
      context: .
      dockerfile: ./OrderGenerator/dockerfile
    image: order-generator
    container_name: order-generator
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ../OrderGenerator:/app
    ports:
      - "5287:5287"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      - rabbitmq
    command: dotnet run --project OrderGeneratorApi/ --urls "http://0.0.0.0:5287" # Somente para desenvolvimento
    networks:
      - order-services-network

  order-processor:
    build:
      context: .
      dockerfile: ./OrderProcessor/dockerfile
    image: order-processor
    container_name: order-processor
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ../OrderProcessor:/app
      - ./OrderProcessor/php/custom.ini:/usr/local/etc/php/conf.d/custom.ini
    depends_on:
      - rabbitmq
      - postgres-order
    command: php /app/OrderProcessorApi/artisan queue:work # Somente para desenvolvimento
    networks:
      - order-services-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    # volumes:
    #   - ../RabbitMq:/var/lib/rabbitmq
    ports:
      - "5672:5672"     # Porta envio de mensagens
      - "15672:15672"   # Porta do painel web
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_VHOST: /
    networks:
      - order-services-network

  postgres-order:
    image: postgres:16.9-bookworm
    container_name: postgres-order
    restart: unless-stopped
    volumes:
      - ../PostgresOrder/dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
      POSTGRES_DB: postgres
    networks:
      - order-services-network

  postgres-auth:
    image: postgres:16.9-bookworm
    container_name: postgres-auth
    restart: unless-stopped
    volumes:
      - ../PostgresAuth/dbdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
      POSTGRES_DB: postgres
    networks:
      - order-services-network

networks:
  order-services-network:
    driver: bridge